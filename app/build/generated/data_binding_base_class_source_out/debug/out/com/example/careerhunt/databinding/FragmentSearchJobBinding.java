// Generated by view binder compiler. Do not edit!
package com.example.careerhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.careerhunt.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchJobBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBack2;

  @NonNull
  public final ImageButton btnFilter;

  @NonNull
  public final ImageButton imgBtnRedo;

  @NonNull
  public final ConstraintLayout itemCont;

  @NonNull
  public final TextView lblResultNum;

  @NonNull
  public final CircularProgressIndicator progressIndicatorSearch;

  @NonNull
  public final ConstraintLayout searchBox;

  @NonNull
  public final ImageButton searchBtn;

  @NonNull
  public final ConstraintLayout searchContainer;

  @NonNull
  public final RecyclerView searchRecyclerView;

  @NonNull
  public final EditText txtSearch;

  private FragmentSearchJobBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnBack2, @NonNull ImageButton btnFilter,
      @NonNull ImageButton imgBtnRedo, @NonNull ConstraintLayout itemCont,
      @NonNull TextView lblResultNum, @NonNull CircularProgressIndicator progressIndicatorSearch,
      @NonNull ConstraintLayout searchBox, @NonNull ImageButton searchBtn,
      @NonNull ConstraintLayout searchContainer, @NonNull RecyclerView searchRecyclerView,
      @NonNull EditText txtSearch) {
    this.rootView = rootView;
    this.btnBack2 = btnBack2;
    this.btnFilter = btnFilter;
    this.imgBtnRedo = imgBtnRedo;
    this.itemCont = itemCont;
    this.lblResultNum = lblResultNum;
    this.progressIndicatorSearch = progressIndicatorSearch;
    this.searchBox = searchBox;
    this.searchBtn = searchBtn;
    this.searchContainer = searchContainer;
    this.searchRecyclerView = searchRecyclerView;
    this.txtSearch = txtSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchJobBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack2;
      ImageButton btnBack2 = ViewBindings.findChildViewById(rootView, id);
      if (btnBack2 == null) {
        break missingId;
      }

      id = R.id.btnFilter;
      ImageButton btnFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnFilter == null) {
        break missingId;
      }

      id = R.id.imgBtnRedo;
      ImageButton imgBtnRedo = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnRedo == null) {
        break missingId;
      }

      id = R.id.itemCont;
      ConstraintLayout itemCont = ViewBindings.findChildViewById(rootView, id);
      if (itemCont == null) {
        break missingId;
      }

      id = R.id.lblResultNum;
      TextView lblResultNum = ViewBindings.findChildViewById(rootView, id);
      if (lblResultNum == null) {
        break missingId;
      }

      id = R.id.progressIndicatorSearch;
      CircularProgressIndicator progressIndicatorSearch = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicatorSearch == null) {
        break missingId;
      }

      id = R.id.searchBox;
      ConstraintLayout searchBox = ViewBindings.findChildViewById(rootView, id);
      if (searchBox == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      ImageButton searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      ConstraintLayout searchContainer = (ConstraintLayout) rootView;

      id = R.id.searchRecyclerView;
      RecyclerView searchRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchRecyclerView == null) {
        break missingId;
      }

      id = R.id.txtSearch;
      EditText txtSearch = ViewBindings.findChildViewById(rootView, id);
      if (txtSearch == null) {
        break missingId;
      }

      return new FragmentSearchJobBinding((ConstraintLayout) rootView, btnBack2, btnFilter,
          imgBtnRedo, itemCont, lblResultNum, progressIndicatorSearch, searchBox, searchBtn,
          searchContainer, searchRecyclerView, txtSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
